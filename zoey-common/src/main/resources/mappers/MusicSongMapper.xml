<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.sxgan.common.mapper.IMusicSongMapper">
    <resultMap id="BaseResultMap" type="cn.sxgan.common.entity.MusicSong">
        <result property="songId" column="song_id"/>
        <result property="songName" column="song_name"/>
        <result property="songUrl" column="song_url"/>
        <result property="songPic" column="song_pic"/>
        <result property="lyricUrl" column="lyric_url"/>
        <result property="songStyle" column="song_style"/>
        <result property="releaseDate" column="release_date"/>
        <result property="albumId" column="album_id"/>
        <result property="singerId" column="singer_id"/>
        <result property="delFlag" column="del_flag"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <association property="musicSinger" javaType="cn.sxgan.common.entity.MusicSinger">
            <result property="singerId" column="singer_id"/>
            <result property="singerName" column="singer_name"/>
            <result property="singerPic" column="singer_pic"/>
            <result property="address" column="address"/>
            <result property="delFlag" column="del_flag"/>
            <result property="createTime" column="create_time"/>
            <result property="updateTime" column="update_time"/>
        </association>
        <association property="musicAlbum" javaType="cn.sxgan.common.entity.MusicAlbum">
            <result property="albumId" column="album_id"/>
            <result property="albumName" column="album_name"/>
            <result property="albumPic" column="album_pic"/>
            <result property="releaseDate" column="release_date"/>
            <result property="singerId" column="singer_id"/>
            <result property="delFlag" column="del_flag"/>
            <result property="createTime" column="create_time"/>
            <result property="updateTime" column="update_time"/>
        </association>
    </resultMap>
    <!-- 通用查询结果列 -->
    <sql id="BaseColumnList">
        song_id,
            song_name,
            song_url,
            song_pic,
            lyric_url,
            song_style,
            release_date,
            album_id,
            singer_id,
            del_flag,
            create_time,
            update_time
    </sql>
    <sql id="ConditionSql">
        <where>
            <if test="songId != null">
                and song_id = #{songId,jdbcType=BIGINT}
            </if>
            <if test="songName != null">
                and song_name = #{songName,jdbcType=VARCHAR}
            </if>
            <if test="songUrl != null">
                and song_url = #{songUrl,jdbcType=VARCHAR}
            </if>
            <if test="songPic != null">
                and song_pic = #{songPic,jdbcType=VARCHAR}
            </if>
            <if test="lyricUrl != null">
                and lyric_url = #{lyricUrl,jdbcType=VARCHAR}
            </if>
            <if test="songStyle != null">
                and song_style = #{songStyle,jdbcType=VARCHAR}
            </if>
            <if test="releaseDate != null">
                and release_date = #{releaseDate,jdbcType=DATETIME}
            </if>
            <if test="albumId != null">
                and album_id = #{albumId,jdbcType=VARCHAR}
            </if>
            <if test="singerId != null">
                and singer_id = #{singerId,jdbcType=VARCHAR}
            </if>
            <if test="delFlag != null">
                and del_flag = #{delFlag,jdbcType=TINYINT}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=DATETIME}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime,jdbcType=DATETIME}
            </if>
            <if test="createStartDate != null">
                and create_time <![CDATA[ >= ]]> #{createStartDate,jdbcType=TIMESTAMP}
            </if>
            <if test="createEndDate != null">
                and create_time <![CDATA[ <= ]]> #{createEndDate,jdbcType=TIMESTAMP}
            </if>
            <if test="updateStartDate != null">
                and update_time <![CDATA[ >= ]]> #{updateStartDate,jdbcType=TIMESTAMP}
            </if>
            <if test="updateEndDate != null">
                and update_time <![CDATA[ <= ]]> #{updateEndDate,jdbcType=TIMESTAMP}
            </if>
        </where>
    </sql>
    <select id="selectMusicSongByCondition" resultType="cn.sxgan.common.entity.MusicSong" resultMap="BaseResultMap"
            parameterType="cn.sxgan.common.entity.query.MusicSongQuery">
        select
        <include refid="BaseColumnList"/>
        from music_song
        <include refid="ConditionSql"/>
    </select>

    <select id="selectSongBySongListId" resultType="cn.sxgan.common.entity.MusicSong" resultMap="BaseResultMap"
            parameterType="cn.sxgan.common.entity.query.MusicListQuery">
        <!--@mbg.generated-->
        select *
        from music_song song
        left join music_singer singer on song.singer_id = singer.singer_id
        left join music_album album on song.album_id = album.album_id
        where song.song_id in (select sr.song_id from music_list_song_relate sr where sr.list_id
        =#{listId,jdbcType=BIGINT})
    </select>

    <select id="randomSelectSong" resultType="cn.sxgan.common.entity.MusicSong" resultMap="BaseResultMap">
        select *
        from music_song song
        left join music_singer singer on song.singer_id = singer.singer_id
        left join music_album album on song.album_id = album.album_id
        order by rand() limit 1
    </select>
</mapper>